* Amerine Wine Labels

    #+begin_src jq
      (.[1] |
    #+end_src

** 2024-10 Add Titles
   I need a method to add the wine label information from Eric into the label
   data.

   Eric has a [[https://docs.google.com/spreadsheets/d/1wzO62YKaYBojdMveLapXRMJ2U9Yi4lXS50Q42N-Zl4g/edit#gid=868536261][spreadsheet]], that includes producer, brand, wine type, date
   city/region, abv, proof marginalia.  This was saved as ~titles.csv~.

    I need to update the jq files first. This script creates a titles.json file from the
    csv file.  It includes titles and other information

    #+begin_src sparql :tangle titles.rq
      PREFIX wine_label: <ark:/87287/d7794w/schema#>
      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
      PREFIX ucdlib: <http://schema.library.ucdavis.edu/schema#>
      PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
      PREFIX schema: <http://schema.org/>

      CONSTRUCT {
        ?ark a schema:label;
          schema:name ?name;
          rdfs:label ?labelValue;
          wine_label:folder ?old_title;
          wine_label:digitization_number ?label_number;
          wine_label:producer ?producer;
          wine_label:brand ?brand;
          wine_label:wine_type ?wine_type;
          wine_label:date ?date;
          wine_label:city_region ?city_region;
          wine_label:ABV ?abv;
          wine_label:proof ?proof;
          wine_label:marginalia ?marginalia;
          wine_label:description ?description;
          wine_label:questions ?questions;
          .
        }
      WHERE {
        BIND(replace(?url,"https://digital.ucdavis.edu/collection/amerine-wine-labels/labels/label_","") as ?label_number)
        BIND('ark:/87287/d7794w' AS ?collection)
        BIND(uri(concat("ark:/85140/", replace(?filename,".jpg",""))) AS ?ark)
        BIND(coalesce(?producer, "") AS ?p)
        BIND(coalesce(concat(" ยง ",?brand), "") AS ?b)
        BIND(coalesce(concat(" ยง ",?wine_type), "") AS ?w)
        BIND(coalesce(concat(" ยง ",?city_region), "") AS ?c)

        BIND(concat(?p,?b,?w,?c) AS ?name)
      }

    #+end_src

    #+begin_src bash
   tarql titles.rq  titles.csv | \
       riot --syntax=turtle --formatted=jsonld | \
       jsonld compact -c $(pwd)/context.json > titles.json
 #+end_src

 #+RESULTS:

 Then you can make individual titles.json files with something like:

 #+begin_src bash
   for i in $(cd items; echo ark:/85140/d4????); do \
       echo $i;
       jq --arg ark "$i"  '.["@graph"][] | select(.["@id"]==$ark) | del(.["@id"]) | del(.["@type"])' titles.json > items/$i/title.json;
   done
 #+end_src

 And you can join these together with the following jq conversion.  I'm also
 removing the isPartOf, and adding a better publisher
    #+begin_src jq :tangle add_titles.jq
      .[0]
       +
      (.[1] |
        del(.["schema:isPartOf"]) |
        del(.["schema:identifier"][] | select(contains("ark:") | not )))
      + .[2]
      + {
        "schema:publisher":{
            "@id":"http://id.loc.gov/authorities/names/no2008108707",
            "schema:name":"University of California, Davis. General Library. Dept. of Special Collections"
          }
      }
    #+end_src

    #+begin_src bash
  c=context.json
  for d in items/ark:/85140/d4????; do \
      echo -n -e "$d\r";\
      cp ${d}.jsonld.json ${d}.jsonld.json-;\
      jq -s -f add_titles.jq ${c} ${d}.jsonld.json- ${d}/title.json  > ${i};
  done
#+end_src

** 2024-10 remove ~@graph~

   In the current metadata format, we tried to include information that the
   label ~describesWine~.  Here's an example:

   #+begin_src json
     {
       "@graph": [
         {
           "ucdlib:describesWine": {
             "@id": "@base:#wine"
           "schema:identifier": [
             "label_0041",
             "ark:/85140/d4001n"
           ]
         },
         {
           "@id": "@base:#wine",
           "@type": "ucdlib:Wine",
           "ucdlib:WineType": {
             "@id": "ucdlib:Still"
           },
           "http://www.wikidata.org/prop/direct/P297": "ES"
         }
       ]
     }
   #+end_src

   We are removing this, and as a result, removing the ~@graph~ component.  We
   only do this to the records with a ~@graph~ node.

   I'll use this opportunity to add in a new context file.

   #+begin_src json :tangle context.json
     {
       "@context": {
         "wine_label": "ark:/87287/d7794w/schema#",
         "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
         "ucdlib": "http://schema.library.ucdavis.edu/schema#",
         "xsd": "http://www.w3.org/2001/XMLSchema#",
         "schema": "http://schema.org/"
       }
     }
    #+end_src

    And you can join these together with the following jq conversion:
    #+begin_src jq :tangle rm_graph.jq
      .[0]
       +
      (.[1]["@graph"][0] |
        del(.["ucdlib:describesWine"])
      )
    #+end_src

#+begin_src bash
  c=context.json
  for i in $(grep -l '@graph' items/ark:/85140/d4????.jsonld.json); do \
      echo $i;
      cp ${i} ${i}-;\
      jq -s -f rm_graph.jq ${c} ${i}- > ${i};\
  done
#+end_src


** 2024-09 Initial Metadata Commit

   Originally, there was not an identifier for the collection;  I have minted,
   ark:/87287/d7794w for this collection.

*** Get from old version

    Somehow I managed to mess up all the files that I had been adding to the
    ~amermine-wine-labels~ metadata file.  I got the old data back from sandbox
    export, and I'm trying to upload them again.

    In the process I noticed that the form of the metadata changes midway
    through the data.  Labels of:

#+begin_src bash
  for i in label_[0123]??? label_4[0-8]?? label_490? label_491[0123]; do echo $i; done
#+end_src

have two items within a ~["@graph"]~, while,

#+begin_src bash
  for i in label_491[456789] label_49[2-9]?? label_[5-9]???; do echo $i; done
#+end_src

Don't have a graph, and have the information in the root.  So, I need to replace
what I had before.

#+begin_src bash
  for i in label_[0123]??? label_4[0-8]?? label_490? label_491[0123]; do ark=$(jq -r '.["@graph"][0]["schema:identifier"][] | select(.|match("^ark:"))' $i.jsonld.json); mkdir -p $(dirname $ark); mv $i $ark; mv $i.jsonld.json $ark.jsonld.json ; done
  for i in label_491[456789] label_49[2-9]?? label_[5-9]???; do ark=$(jq -r '.["schema:identifier"][] | select(.|match("^ark:"))' $i.jsonld.json); mkdir -p $(dirname $ark); mv $i $ark; mv $i.jsonld.json $ark.jsonld.json ; done
#+end_src

This script just changes name of the metadata.  Now, I could also rexport the
data, because that's where this original data came from, but by looking at these
data files, they are the same, so I'll just rsync the ones I messed up.

#+begin_src bash
  for i in d4*.json; do echo $i; diff  ../../../v1/items/ark\:/85140/$i $i; done | less
#+end_src

And now, I think I need to check in a version of the metadata, before I try this
again.


** Original Processing
  I seem to have been doing two things.  First, I went through and identified
  every image that is simply a card label, and not a wine label. I cleverly called
  the metadata for these label.json, which is pretty dumb.  I will renanme these
  as index-card-label.json which is a bit more understandable.

  The way that I would do this was be going back to the directory with the jpegs,
  and I'd rename the metadata.json file to label.json.  Then, I'd remove the
  metadata.ttl data.  Then, I would often copy the metadata from the next label
  and rewrite the label info.  That's probably to get the metdata for the upcoming labels.

  #+BEGIN_SRC bash
  l=3629; cd ../a$l; mv metadata.json label.json; rm metadata.ttl; cat label.json
   cp ../a3630/metadata.json label.json; cat label.json
  #+END_SRC

  Also, for a few index cards, we only have the thumbnail, not the full index.
  These are cards a1044, a1070, and a1091. a1044 looks like it says, K,L,M. a1070
  says N,O,P. a1091 says Q,R,S,T. These all have a index-card-label card assigned
  to them.

  The last index-card-label in the data is item a3659.  After
  that, either there are no more labels, or else the labels are no longer
  catalogged.

  There are no full images without a thumbnail. Note, there are no sequences
  missing from the list of items.

** Other designations

However, the labels alone do not seem to indicate where all the breaks exist.
We can go through the data, and see where all the changes in metadata occur.

#+BEGIN_SRC bash
	last_metadata='';
	cur_folder='folder/'
	for a in data/a*; do
		b=`basename $a`;
		f=${b#a*}
		# Maybe a new Folder
		if [[ -f $a/metadata.json ]]; then
			this_metadata=`tr -d "\n" < $a/metadata.json | sed -e 's/\s//g'`;
			if [[ "$this_metadata" != "$last_metadata" ]] ; then
				cur_folder=folder/$f
				cur_dir=$cur_folder
				[[ -d $cur_folder ]] || mkdir $cur_folder;
				j=`basename $this_json`;
				jq . < $a/metadata.json > $cur_folder/metadata.json
				last_metadata=$this_metadata;
			fi
		if [[ -f $a/full.jpg ]] ; then
			cp $a/full.jpg $cur_dir/label_$f.jpg
		fi
		elif [[ -f $a/index-card-label.json ]]; then
			cur_dir=$cur_folder/index_card_$f
			[[ -d $cur_dir ]] || mkdir $cur_dir;
			echo $cur_dir/metadata.json
			jq . < $a/index-card-label.json > $cur_dir/metadata.json
			if [[ -f $a/full.jpg ]] ; then
				cp $a/full.jpg $cur_dir/index_card_$f.jpg
			fi
		fi
	done
#+END_SRC

#+RESULTS:
| folder//index_card_0001/metadata.json           |
| folder/0002/index_card_0014/metadata.json       |
| folder/0002/index_card_0065/metadata.json       |
| folder/0160/index_card_0161/metadata.json       |
| folder/0160/index_card_0181/metadata.json       |
| folder/0160/index_card_0198/metadata.json       |
| folder/0160/index_card_0221/metadata.json       |
| folder/0160/index_card_0240/metadata.json       |
| folder/0160/index_card_0255/metadata.json       |
| folder/0160/index_card_0269/metadata.json       |
| folder/0160/index_card_0276/metadata.json       |
| folder/0160/index_card_0285/metadata.json       |
| folder/0160/index_card_0315/metadata.json       |
| folder/0160/index_card_0353/metadata.json       |
| folder/0354/index_card_0390/metadata.json       |
| folder/0354/index_card_0426/metadata.json       |
| folder/0629/index_card_0767/metadata.json       |
| folder/0768/index_card_0779/metadata.json       |
| folder/0768/index_card_0789/metadata.json       |
| folder/0768/index_card_0841/metadata.json       |
| folder/0768/index_card_0926/metadata.json       |
| folder/0927/index_card_0980/metadata.json       |
| folder/0927/index_card_1025/metadata.json       |
| folder/0927/index_card_1044/metadata.json       |
| folder/0927/index_card_1070/metadata.json       |
| folder/0927/index_card_1091/metadata.json       |
| folder/0927/index_card_1114/metadata.json       |
| folder/0927/index_card_1137/metadata.json       |
| folder/1138/index_card_1174/metadata.json       |
| folder/1138/index_card_1242/metadata.json       |
| folder/1138/index_card_1251/metadata.json       |
| folder/1138/index_card_1267/metadata.json       |
| folder/1268/index_card_1270/metadata.json       |
| folder/1268/index_card_1292/metadata.json       |
| folder/1268/index_card_1317/metadata.json       |
| folder/1268/index_card_1366/metadata.json       |
| folder/1268/index_card_1367/metadata.json       |
| folder/1268/index_card_1391/metadata.json       |
| folder/1268/index_card_1425/metadata.json       |
| folder/1268/index_card_1443/metadata.json       |
| folder/1268/index_card_1496/metadata.json       |
| folder/1497/index_card_1579/metadata.json       |
| folder/1497/index_card_1603/metadata.json       |
| folder/1497/index_card_1616/metadata.json       |
| folder/1497/index_card_1617/metadata.json       |
| folder/1497/index_card_1625/metadata.json       |
| folder/1654/index_card_1702/metadata.json       |
| folder/1654/index_card_1723/metadata.json       |
| folder/1724/index_card_1741/metadata.json       |
| folder/1724/index_card_1829/metadata.json       |
| folder/1854/index_card_1902/metadata.json       |
| folder/1854/index_card_1921/metadata.json       |
| folder/1854/index_card_1929/metadata.json       |
| folder/1854/index_card_1949/metadata.json       |
| folder/1854/index_card_1965/metadata.json       |
| folder/1854/index_card_2020/metadata.json       |
| folder/2021/index_card_2092/metadata.json       |
| folder/2021/index_card_2111/metadata.json       |
| folder/2112/index_card_2136/metadata.json       |
| folder/2112/index_card_2157/metadata.json       |
| folder/2112/index_card_2161/metadata.json       |
| folder/2112/index_card_2184/metadata.json       |
| folder/2112/index_card_2215/metadata.json       |
| folder/2112/index_card_2242/metadata.json       |
| folder/2243/index_card_2278/metadata.json       |
| folder/2243/index_card_2334/metadata.json       |
| folder/2243/index_card_2348/metadata.json       |
| folder/2243/index_card_2361/metadata.json       |
| folder/2243/index_card_2379/metadata.json       |
| folder/2243/index_card_2441/metadata.json       |
| folder/2442/index_card_2467/metadata.json       |
| folder/2442/index_card_2522/metadata.json       |
| folder/2442/index_card_2569/metadata.json       |
| folder/2442/index_card_2603/metadata.json       |
| folder/2442/index_card_2617/metadata.json       |
| folder/2618/index_card_2696/metadata.json       |
| folder/2618/index_card_2756/metadata.json       |
| folder/2618/index_card_2786/metadata.json       |
| folder/2787/index_card_2826/metadata.json       |
| folder/2787/index_card_2883/metadata.json       |
| folder/2787/index_card_2893/metadata.json       |
| folder/2894/index_card_2992/metadata.json       |
| folder/2993/index_card_3037/metadata.json       |
| folder/2993/index_card_3100/metadata.json       |
| folder/2993/index_card_3115/metadata.json       |
| folder/2993/index_card_3142/metadata.json       |
| folder/3143/index_card_3183/metadata.json       |
| folder/3143/index_card_3191/metadata.json       |
| folder/3143/index_card_3219/metadata.json       |
| folder/3143/index_card_3243/metadata.json       |
| folder/3143/index_card_3256/metadata.json       |
| folder/3143/index_card_3303/metadata.json       |
| folder/3143/index_card_3317/metadata.json       |
| folder/3143/index_card_3320/metadata.json       |
| folder/3143/index_card_3321/metadata.json       |
| folder/3143/index_card_3351/metadata.json       |
| folder/3143/index_card_3357/metadata.json       |
| folder/3143/index_card_3394/metadata.json       |
| folder/3143/index_card_3402/metadata.json       |
| folder/3143/index_card_3404/metadata.json       |
| folder/3143/index_card_3407/metadata.json       |
| folder/3143/index_card_3429/metadata.json       |
| folder/3143/index_card_3461/metadata.json       |
| folder/3462/index_card_3484/metadata.json       |
| folder/3462/index_card_3525/metadata.json       |
| folder/3462/index_card_3542/metadata.json       |
| folder/3462/index_card_3574/metadata.json       |
| folder/3462/index_card_3605/metadata.json       |
| folder/3462/index_card_3629/metadata.json       |
| folder/3462/index_card_3659/metadata.json       |
| folder/3660/index_card_3660-a3661/metadata.json |

** Processing Examples

Once I had the json files, I sometimes needed to go back and create versions,
since I changed things.  For example, when switching to schema.org, I needed to
change the language designation, since they use a [[http://tools.ietf.org/html/bcp47][IETF Standard]].  `jq` is your
friend in this case.  For example, here's that change.

#+BEGIN_SRC bash
for i in $(find folder -name metadata.json | xargs grep -l language_id ) ; do
 mv $i $i.bak;
 jq '. |= . + {inLanguage: (.language_id+(if has("country_id") then "-"+.country_id else "" end)),country:.country_id} | del(.language_id, .country_id) ' $i.bak > $i;
done
#+END_SRC

* Updating ARKs

These ARKs were currently pointing to the labelthis project. They have been
updated with the following command. This runs on the metadata.ttl files in the
database.

#+BEGIN_SRC bash
for i in $(find . -name metadata.ttl); do
 id=$(sparql -q --data=$i --results=CSV --query=- <<<"prefix : <http://schema.org/>  select ?n WHERE { ?s :identifier ?n filter regex(?n,'^ark:') .}" | sed -e 's/\r//g' | tail -1);
 http --session=ucd-library POST https://ezid.cdlib.org/id/$id Content-Type:text/plain <<<"_target:https://digital.ucdavis.edu/$id";
done

#+END_SRC
